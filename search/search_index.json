{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"FacturAPI \u2013 Python Client Library Espa\u00f1ol This is a Python library for FacturAPI \u26a0\ufe0fWarning: This is still an unofficial library and it is still under development. This is not a final product.\u26a0\ufe0f FacturAPI makes it easy for developers to generate valid Invoices in Mexico (known as Factura Electr\u00f3nica or CFDI). This library is based on cuenca-python \ud83d\udc99. \ud83d\udcbb Installation Just use pip to install de library: pip install facturapi \ud83d\ude80 Getting started Authenticate with your API Key Be sure to create a free account on FacturAPI and have access to your test or live API keys. There are two ways to configure your API Key to use the library: Environment variable: Just set an environment variable and the library will automatically use it: bash export FACTURAPI_KEY=YOUR_API_KEY Using the configure method: If you want to set it in the code, you can import and use the configure method: ```python from facturapi import configure configure(api_key='YOUR_API_KEY') ``` Create a customer After configuring the API Key, you can use the client to perform many actions on the resources, for example to create a Customer: import facturapi from facturapi.resources.customers import CustomerRequest, CustomerUpdateRequest customer = facturapi.Customer.create(data=CustomerRequest( legal_name='Frida Kahlo', tax_id='ABCD111111CBA', email='frida_kahlo@test.com', )) For more details on the data used to create a Customer and other resources, be sure to check out the docs . More examples can be found on the examples directory. \ud83d\udcda Documentation You can checkout Facturapi's docs for more info on the API and its resources. Or checkout the library's docs for usage and more technical details. \ud83d\udca1 Contribute Found a bug? Please create an issue addressing the bug and how to replicate it. Want to contribute? Be sure to fork the repo and send your PR! Any and all help is appreciated. Also don't forget to keep the coverage above 98%, we love tested code! Contacts: Facturapi: contacto@facturapi.io Cuenca: dev@cuenca.com Developed and maintained with \ud83d\udc99 by Cuenca","title":"Overview"},{"location":"#installation","text":"Just use pip to install de library: pip install facturapi","title":"\ud83d\udcbb Installation"},{"location":"#getting-started","text":"","title":"\ud83d\ude80 Getting started"},{"location":"#authenticate-with-your-api-key","text":"Be sure to create a free account on FacturAPI and have access to your test or live API keys. There are two ways to configure your API Key to use the library: Environment variable: Just set an environment variable and the library will automatically use it: bash export FACTURAPI_KEY=YOUR_API_KEY Using the configure method: If you want to set it in the code, you can import and use the configure method: ```python from facturapi import configure configure(api_key='YOUR_API_KEY') ```","title":"Authenticate with your API Key"},{"location":"#create-a-customer","text":"After configuring the API Key, you can use the client to perform many actions on the resources, for example to create a Customer: import facturapi from facturapi.resources.customers import CustomerRequest, CustomerUpdateRequest customer = facturapi.Customer.create(data=CustomerRequest( legal_name='Frida Kahlo', tax_id='ABCD111111CBA', email='frida_kahlo@test.com', )) For more details on the data used to create a Customer and other resources, be sure to check out the docs . More examples can be found on the examples directory.","title":"Create a customer"},{"location":"#documentation","text":"You can checkout Facturapi's docs for more info on the API and its resources. Or checkout the library's docs for usage and more technical details.","title":"\ud83d\udcda Documentation"},{"location":"#contribute","text":"","title":"\ud83d\udca1 Contribute"},{"location":"#found-a-bug","text":"Please create an issue addressing the bug and how to replicate it.","title":"Found a bug?"},{"location":"#want-to-contribute","text":"Be sure to fork the repo and send your PR! Any and all help is appreciated. Also don't forget to keep the coverage above 98%, we love tested code!","title":"Want to contribute?"},{"location":"#contacts","text":"Facturapi: contacto@facturapi.io Cuenca: dev@cuenca.com Developed and maintained with \ud83d\udc99 by Cuenca","title":"Contacts:"},{"location":"resources/customers/","text":"Customer resource, it includes the class Resource and two request classes to create and update the resource. Classes facturapi.resources.customers.Customer dataclass Customer resource Resource for a Customer. It inherits from Creatable , Queryable , Retrievable and Updatable . Attributes: Name Type Description created_at datetime.datetime The datetime in which the resource was created. livemode bool If the resource was created in test or live mode. legal_name str Name of the customer. tax_id str RFC of the customer. email str Email of the customer. address CustomerAddress Address data of the model. Optional. phone str Phone of the customer. Defaults to None . Methods facturapi . resources . customers . Customer . create ( data ) classmethod Create a customer. Parameters: Name Type Description Default data CustomerRequest All the request data to create a customer. required Returns: Type Description Customer Customer: The created customer resource. Source code in facturapi/resources/customers.py @classmethod def create ( cls , data : CustomerRequest ) -> 'Customer' : \"\"\"Create a customer. Args: data: All the request data to create a customer. Returns: Customer: The created customer resource. \"\"\" cleaned_data = data . dict ( exclude_unset = True , exclude_none = True ) return cast ( 'Customer' , cls . _create ( ** cleaned_data )) facturapi . resources . customers . Customer . update ( id , data ) classmethod Update a customer. Parameters: Name Type Description Default id str ID of the customer to be updated. required data CustomerUpdateRequest Data to be updated. required Returns: Type Description Customer Customer: The udpated customer resource. Source code in facturapi/resources/customers.py @classmethod def update ( cls , id : str , data : CustomerUpdateRequest ) -> 'Customer' : \"\"\"Update a customer. Args: id: ID of the customer to be updated. data: Data to be updated. Returns: Customer: The udpated customer resource. \"\"\" cleaned_data = data . dict ( exclude_unset = True , exclude_none = True ) return cast ( 'Customer' , cls . _update ( id = id , ** cleaned_data )) facturapi.resources.customers.CustomerRequest pydantic-model This request must be filled to create a Customer. It contains all information necessary to create this resource. Attributes: Name Type Description legal_name str Full name of the customer. tax_id str RFC of the customer. email str Email of the customer. phone str Phone of the customer. Optional. address CustomerAddress Address object of the customer. Optional. facturapi.resources.customers.CustomerUpdateRequest pydantic-model This request must be filled to update a Customer. It contains all information necessary to update this resource. Attributes: Name Type Description legal_name str Full name of the customer. Optional. tax_id str RFC of the customer. Optional. email str Email of the customer. Optional. phone str Phone of the customer. Optional. address CustomerAddress Address object of the customer. Optional.","title":"Customers"},{"location":"resources/customers/#facturapi.resources.customers-classes","text":"","title":"Classes"},{"location":"resources/customers/#facturapi.resources.customers.Customer","text":"Customer resource Resource for a Customer. It inherits from Creatable , Queryable , Retrievable and Updatable . Attributes: Name Type Description created_at datetime.datetime The datetime in which the resource was created. livemode bool If the resource was created in test or live mode. legal_name str Name of the customer. tax_id str RFC of the customer. email str Email of the customer. address CustomerAddress Address data of the model. Optional. phone str Phone of the customer. Defaults to None .","title":"Customer"},{"location":"resources/customers/#facturapi.resources.customers.Customer-methods","text":"","title":"Methods"},{"location":"resources/customers/#facturapi.resources.customers.Customer.create","text":"Create a customer. Parameters: Name Type Description Default data CustomerRequest All the request data to create a customer. required Returns: Type Description Customer Customer: The created customer resource. Source code in facturapi/resources/customers.py @classmethod def create ( cls , data : CustomerRequest ) -> 'Customer' : \"\"\"Create a customer. Args: data: All the request data to create a customer. Returns: Customer: The created customer resource. \"\"\" cleaned_data = data . dict ( exclude_unset = True , exclude_none = True ) return cast ( 'Customer' , cls . _create ( ** cleaned_data ))","title":"create()"},{"location":"resources/customers/#facturapi.resources.customers.Customer.update","text":"Update a customer. Parameters: Name Type Description Default id str ID of the customer to be updated. required data CustomerUpdateRequest Data to be updated. required Returns: Type Description Customer Customer: The udpated customer resource. Source code in facturapi/resources/customers.py @classmethod def update ( cls , id : str , data : CustomerUpdateRequest ) -> 'Customer' : \"\"\"Update a customer. Args: id: ID of the customer to be updated. data: Data to be updated. Returns: Customer: The udpated customer resource. \"\"\" cleaned_data = data . dict ( exclude_unset = True , exclude_none = True ) return cast ( 'Customer' , cls . _update ( id = id , ** cleaned_data ))","title":"update()"},{"location":"resources/customers/#facturapi.resources.customers.CustomerRequest","text":"This request must be filled to create a Customer. It contains all information necessary to create this resource. Attributes: Name Type Description legal_name str Full name of the customer. tax_id str RFC of the customer. email str Email of the customer. phone str Phone of the customer. Optional. address CustomerAddress Address object of the customer. Optional.","title":"CustomerRequest"},{"location":"resources/customers/#facturapi.resources.customers.CustomerUpdateRequest","text":"This request must be filled to update a Customer. It contains all information necessary to update this resource. Attributes: Name Type Description legal_name str Full name of the customer. Optional. tax_id str RFC of the customer. Optional. email str Email of the customer. Optional. phone str Phone of the customer. Optional. address CustomerAddress Address object of the customer. Optional.","title":"CustomerUpdateRequest"},{"location":"resources/invoices/","text":"Invoice resource, it includes the class Resource, a request class to create the resource and a class to represent an Invoice Item. Classes facturapi.resources.invoices.Invoice dataclass Invoice resource Resource for an Invoice. It inherits from Creatable , Deletable , Downloadable , Queryable and Retrievable . Attributes: Name Type Description created_at datetime.datetime The datetime in which the resource was created. livemode bool If the resource was created in test or live mode. status str Status of the invoice. customer_info CustomerBasicInfo Basic info of the Customer. customer_uri str URI representing how to fetch a Customer resource related to the Invoice. total float Invoice total. uuid str 'Folio fiscal' assigned by SAT. payment_form PaymentForm Form of payment of the Invoice. items List[InvoiceItem] List of items of the Invoice. currency str Currency of the invoice in ISO format. exchange float Exchange value to Mexican Pesos. cancellation_status str If the Invoice was cancelled, the status of the cancellation. Optional. folio_number int Folio number. Optional. series str Custom series string. Optional. Defaults to None . related List[str] UUID of related invoices. Defaults to None . relation InvoiceRelation Relation key from the SAT catalogue. Defaults to None . Attributes facturapi . resources . invoices . Invoice . customer : Customer property readonly Fetch and access Customer resource. This property fetches and maps the customer related to an invoice so it can be accessed through a simple property instead of making a manual retrieve. Returns: Type Description Customer Customer: Customer related to the invoice. Methods facturapi . resources . invoices . Invoice . cancel ( invoice_id ) classmethod Cancel an invoice. Calls a DELETE request on invoice resource. Parameters: Name Type Description Default invoice_id str The ID of the invoice to cancel. required Returns: Type Description Invoice Invoice: The cancelled invoice resource. Source code in facturapi/resources/invoices.py @classmethod def cancel ( cls , invoice_id : str ) -> 'Invoice' : \"\"\"Cancel an invoice. Calls a DELETE request on invoice resource. Args: invoice_id: The ID of the invoice to cancel. Returns: Invoice: The cancelled invoice resource. \"\"\" return cast ( 'Invoice' , cls . _delete ( invoice_id )) facturapi . resources . invoices . Invoice . create ( data ) classmethod Create an invoice. Parameters: Name Type Description Default data InvoiceRequest All the request data to create an invoice. required Returns: Type Description Invoice Invoice: The created resource. Source code in facturapi/resources/invoices.py @classmethod def create ( cls , data : InvoiceRequest ) -> 'Invoice' : \"\"\"Create an invoice. Args: data: All the request data to create an invoice. Returns: Invoice: The created resource. \"\"\" cleaned_data = data . dict ( exclude_unset = True , exclude_none = True ) return cast ( 'Invoice' , cls . _create ( ** cleaned_data )) facturapi.resources.invoices.InvoiceItem pydantic-model Class representing an Item from an Invoice. Attributes: Name Type Description quantity str Number of items of this type. Defaults to 1 . discount float Discount on the item price if any. Defaults to 0 . product Union[str, ProductBasicInfo, Dict] Product ID, info or request to create a resource. custom_keys List[str] List of custom product keys. Optional. complement str XML code with additional info to add to the invoice. Optional. parts List[ItemParts] If the concept includes parts. Optional. property_tax_account str 'Predial' number. Optional. facturapi.resources.invoices.InvoiceRequest pydantic-model This request must be filled to create an Invoice. It contains all information necessary to create this resource. Attributes: Name Type Description customer Union[str, CustomerRequest] Customer ID or a CustomerRequest to create a new one. items List[InvoiceItem] List of items of the invoice. payment_form PaymentForm Form of payment. payment_method PaymentMethod Method of payment. Defaults to PaymentMethod.contado . use InvoiceUse Invoice SAT CFDI use. Defaults to InvoiceUse.adquisicion_mercancias . folio_number int Internal folio number. Optional. series str Internal series string. Optional. currency str Currency of the invoice in ISO format. Defaults to MXN . exchange float If a currency is present, the exchange value to Mexican Pesos. Defaults to 1.0 . conditions str Payment conditions. Optional. foreign_trade Dict Info to add a 'Complemento de Comercio Exterior'. Optional. related List[str] UUID list of related invoices. Optional. relation InvoiceRelation If related invoices are given, their relation key from the SAT catalogue. Optional. pdf_custom_section str HTML string code to include content to the invoice's PDF. Optional addenda str XML code with Addenda. Optional. namespaces List[Namespace] If addenda or an item complement is given, the special namespaces of the XML code. Optional.","title":"Invoices"},{"location":"resources/invoices/#facturapi.resources.invoices-classes","text":"","title":"Classes"},{"location":"resources/invoices/#facturapi.resources.invoices.Invoice","text":"Invoice resource Resource for an Invoice. It inherits from Creatable , Deletable , Downloadable , Queryable and Retrievable . Attributes: Name Type Description created_at datetime.datetime The datetime in which the resource was created. livemode bool If the resource was created in test or live mode. status str Status of the invoice. customer_info CustomerBasicInfo Basic info of the Customer. customer_uri str URI representing how to fetch a Customer resource related to the Invoice. total float Invoice total. uuid str 'Folio fiscal' assigned by SAT. payment_form PaymentForm Form of payment of the Invoice. items List[InvoiceItem] List of items of the Invoice. currency str Currency of the invoice in ISO format. exchange float Exchange value to Mexican Pesos. cancellation_status str If the Invoice was cancelled, the status of the cancellation. Optional. folio_number int Folio number. Optional. series str Custom series string. Optional. Defaults to None . related List[str] UUID of related invoices. Defaults to None . relation InvoiceRelation Relation key from the SAT catalogue. Defaults to None .","title":"Invoice"},{"location":"resources/invoices/#facturapi.resources.invoices.Invoice-attributes","text":"","title":"Attributes"},{"location":"resources/invoices/#facturapi.resources.invoices.Invoice.customer","text":"Fetch and access Customer resource. This property fetches and maps the customer related to an invoice so it can be accessed through a simple property instead of making a manual retrieve. Returns: Type Description Customer Customer: Customer related to the invoice.","title":"customer"},{"location":"resources/invoices/#facturapi.resources.invoices.Invoice-methods","text":"","title":"Methods"},{"location":"resources/invoices/#facturapi.resources.invoices.Invoice.cancel","text":"Cancel an invoice. Calls a DELETE request on invoice resource. Parameters: Name Type Description Default invoice_id str The ID of the invoice to cancel. required Returns: Type Description Invoice Invoice: The cancelled invoice resource. Source code in facturapi/resources/invoices.py @classmethod def cancel ( cls , invoice_id : str ) -> 'Invoice' : \"\"\"Cancel an invoice. Calls a DELETE request on invoice resource. Args: invoice_id: The ID of the invoice to cancel. Returns: Invoice: The cancelled invoice resource. \"\"\" return cast ( 'Invoice' , cls . _delete ( invoice_id ))","title":"cancel()"},{"location":"resources/invoices/#facturapi.resources.invoices.Invoice.create","text":"Create an invoice. Parameters: Name Type Description Default data InvoiceRequest All the request data to create an invoice. required Returns: Type Description Invoice Invoice: The created resource. Source code in facturapi/resources/invoices.py @classmethod def create ( cls , data : InvoiceRequest ) -> 'Invoice' : \"\"\"Create an invoice. Args: data: All the request data to create an invoice. Returns: Invoice: The created resource. \"\"\" cleaned_data = data . dict ( exclude_unset = True , exclude_none = True ) return cast ( 'Invoice' , cls . _create ( ** cleaned_data ))","title":"create()"},{"location":"resources/invoices/#facturapi.resources.invoices.InvoiceItem","text":"Class representing an Item from an Invoice. Attributes: Name Type Description quantity str Number of items of this type. Defaults to 1 . discount float Discount on the item price if any. Defaults to 0 . product Union[str, ProductBasicInfo, Dict] Product ID, info or request to create a resource. custom_keys List[str] List of custom product keys. Optional. complement str XML code with additional info to add to the invoice. Optional. parts List[ItemParts] If the concept includes parts. Optional. property_tax_account str 'Predial' number. Optional.","title":"InvoiceItem"},{"location":"resources/invoices/#facturapi.resources.invoices.InvoiceRequest","text":"This request must be filled to create an Invoice. It contains all information necessary to create this resource. Attributes: Name Type Description customer Union[str, CustomerRequest] Customer ID or a CustomerRequest to create a new one. items List[InvoiceItem] List of items of the invoice. payment_form PaymentForm Form of payment. payment_method PaymentMethod Method of payment. Defaults to PaymentMethod.contado . use InvoiceUse Invoice SAT CFDI use. Defaults to InvoiceUse.adquisicion_mercancias . folio_number int Internal folio number. Optional. series str Internal series string. Optional. currency str Currency of the invoice in ISO format. Defaults to MXN . exchange float If a currency is present, the exchange value to Mexican Pesos. Defaults to 1.0 . conditions str Payment conditions. Optional. foreign_trade Dict Info to add a 'Complemento de Comercio Exterior'. Optional. related List[str] UUID list of related invoices. Optional. relation InvoiceRelation If related invoices are given, their relation key from the SAT catalogue. Optional. pdf_custom_section str HTML string code to include content to the invoice's PDF. Optional addenda str XML code with Addenda. Optional. namespaces List[Namespace] If addenda or an item complement is given, the special namespaces of the XML code. Optional.","title":"InvoiceRequest"},{"location":"resources/resources/","text":"Base module for resources. This module represent all the base code for resources, the resources can inherit behaviour from these classes to perform requests and actions to the API. Classes facturapi.resources.base.Downloadable Generic Downloadable class. Used by resources that can be downloaded as a file. Methods facturapi . resources . base . Downloadable . download ( id , file_type ) classmethod Download a file from resource. Performs a GET request to download a file given a resource ID. Parameters: Name Type Description Default id str The ID of the resource. required file_type FileType Type of the file to be downloaded. (zip, pdf or xml). required Returns: Type Description bytes bytes: Bytes of the file. Source code in facturapi/resources/base.py @classmethod def download ( cls , id : str , file_type : FileType ) -> bytes : \"\"\"Download a file from resource. Performs a GET request to download a file given a resource ID. Args: id: The ID of the resource. file_type: Type of the file to be downloaded. (zip, pdf or xml). Returns: bytes: Bytes of the file. \"\"\" return client . download_request ( f '/ { cls . _resource } / { id } / { file_type . value } ' ) facturapi.resources.base.Queryable dataclass Generic Queryable class. Used by resources that can be queried in lists. Refer to this class to see the query actions that can be performed on a resource. Attributes: Name Type Description _query_params ClassVar A class with the parameters that can be queried. Methods facturapi . resources . base . Queryable . all ( ** query_params ) classmethod Retrieve all resources given a query. All the returned resources are paginated, the method yields the first page of results and if more are found; then it continues to yield pages until all results are queried. Parameters: Name Type Description Default **query_params dict Arbitrary query keyword arguments. {} Returns: Type Description Generator[facturapi.resources.base.Resource, NoneType, NoneType] Generator: A generator containing the queried results. Source code in facturapi/resources/base.py @classmethod def all ( cls , ** query_params ) -> Generator [ Resource , None , None ]: \"\"\"Retrieve all resources given a query. All the returned resources are paginated, the method `yields` the first page of results and if more are found; then it continues to `yield` pages until all results are queried. Args: **query_params (dict): Arbitrary query keyword arguments. Returns: Generator: A generator containing the queried results. \"\"\" q = cls . _query_params ( ** query_params ) next_page_uri = f ' { cls . _resource } ? { urlencode ( q . dict ()) } ' current_page = 1 while next_page_uri : page = client . get ( next_page_uri ) yield from ( cls . _from_dict ( item ) for item in page [ 'data' ]) next_page_uri = '' if current_page < page [ 'total_pages' ]: current_page += 1 q . page = current_page next_page_uri = f ' { cls . _resource } ? { urlencode ( q . dict ()) } ' facturapi . resources . base . Queryable . count ( ** query_params ) classmethod Get the total number of results given a query. Parameters: Name Type Description Default **query_params dict Arbitrary query keyword arguments. {} Returns: Type Description int int: The total count of results. Source code in facturapi/resources/base.py @classmethod def count ( cls , ** query_params ) -> int : \"\"\"Get the total number of results given a query. Args: **query_params (dict): Arbitrary query keyword arguments. Returns: int: The total count of results. \"\"\" q = cls . _query_params ( ** query_params ) response = client . get ( cls . _resource , q . dict ()) items = response [ 'data' ] return len ( items ) facturapi . resources . base . Queryable . first ( ** query_params ) classmethod Retrieve the first resource found given a query or none. Parameters: Name Type Description Default **query_params dict Arbitrary query keyword arguments. {} Returns: Type Description Optional[facturapi.resources.base.Resource] Optional[Resource]: The first resource queried or None if none found. Source code in facturapi/resources/base.py @classmethod def first ( cls , ** query_params ) -> Optional [ Resource ]: \"\"\"Retrieve the first resource found given a query or none. Args: **query_params (dict): Arbitrary query keyword arguments. Returns: Optional[Resource]: The first resource queried or `None` if none found. \"\"\" q = cls . _query_params ( limit = 1 , ** query_params ) response = client . get ( cls . _resource , q . dict ()) try : item = response [ 'data' ][ 0 ] except IndexError : rv = None else : rv = cls . _from_dict ( item ) return rv facturapi . resources . base . Queryable . one ( ** query_params ) classmethod Retrieve only one resource given a query. Given a query, retrieve one and only one resource. If more than one resource or none are found, this method throws an exception. Parameters: Name Type Description Default **query_params dict Arbitrary query keyword arguments. {} Exceptions: Type Description NoResultFound If no result is found. MultipleResultsFound If more than one result is found. Returns: Type Description Resource Resource: The one resource queried. Source code in facturapi/resources/base.py @classmethod def one ( cls , ** query_params ) -> Resource : \"\"\"Retrieve only one resource given a query. Given a query, retrieve one and only one resource. If more than one resource or none are found, this method throws an exception. Args: **query_params (dict): Arbitrary query keyword arguments. Raises: NoResultFound: If no result is found. MultipleResultsFound: If more than one result is found. Returns: Resource: The one resource queried. \"\"\" q = cls . _query_params ( limit = 2 , ** query_params ) response = client . get ( cls . _resource , q . dict ()) items = response [ 'data' ] len_items = len ( items ) if not len_items : raise NoResultFound if len_items > 1 : raise MultipleResultsFound return cls . _from_dict ( items [ 0 ]) facturapi.resources.base.Resource dataclass Generic resource from Facturapi. Generic Resource class used by Facturapi resources. Attributes: Name Type Description _resource ClassVar[str] Name of the resource the class corresponds to. id str ID of the resource. facturapi.resources.base.Retrievable Generic Retrievable class. Used by resources that can be retrieved, i.e: resources that can be retrieved by a GET request to its ID. Methods facturapi . resources . base . Retrievable . refresh ( self ) Refresh a resource Refresh resource's data to be sure its the latest. It performs a GET request on the resource. Returns: Type Description Resource The refreshed resource. Source code in facturapi/resources/base.py def refresh ( self ): \"\"\"Refresh a resource Refresh resource's data to be sure its the latest. It performs a GET request on the resource. Returns: Resource: The refreshed resource. \"\"\" new = self . retrieve ( self . id ) for attr , value in new . __dict__ . items (): setattr ( self , attr , value ) facturapi . resources . base . Retrievable . retrieve ( id ) classmethod Retrieve a resource given its ID Performs a GET request with the ID. Parameters: Name Type Description Default id str The ID of the resource required Returns: Type Description Resource Resource: The resource retrieved. Source code in facturapi/resources/base.py @classmethod def retrieve ( cls , id : str ) -> Resource : \"\"\"Retrieve a resource given its ID Performs a GET request with the ID. Args: id: The ID of the resource Returns: Resource: The resource retrieved. \"\"\" response = client . get ( f '/ { cls . _resource } / { id } ' ) return cls . _from_dict ( response )","title":"Base code"},{"location":"resources/resources/#facturapi.resources.base-classes","text":"","title":"Classes"},{"location":"resources/resources/#facturapi.resources.base.Downloadable","text":"Generic Downloadable class. Used by resources that can be downloaded as a file.","title":"Downloadable"},{"location":"resources/resources/#facturapi.resources.base.Downloadable-methods","text":"","title":"Methods"},{"location":"resources/resources/#facturapi.resources.base.Downloadable.download","text":"Download a file from resource. Performs a GET request to download a file given a resource ID. Parameters: Name Type Description Default id str The ID of the resource. required file_type FileType Type of the file to be downloaded. (zip, pdf or xml). required Returns: Type Description bytes bytes: Bytes of the file. Source code in facturapi/resources/base.py @classmethod def download ( cls , id : str , file_type : FileType ) -> bytes : \"\"\"Download a file from resource. Performs a GET request to download a file given a resource ID. Args: id: The ID of the resource. file_type: Type of the file to be downloaded. (zip, pdf or xml). Returns: bytes: Bytes of the file. \"\"\" return client . download_request ( f '/ { cls . _resource } / { id } / { file_type . value } ' )","title":"download()"},{"location":"resources/resources/#facturapi.resources.base.Queryable","text":"Generic Queryable class. Used by resources that can be queried in lists. Refer to this class to see the query actions that can be performed on a resource. Attributes: Name Type Description _query_params ClassVar A class with the parameters that can be queried.","title":"Queryable"},{"location":"resources/resources/#facturapi.resources.base.Queryable-methods","text":"","title":"Methods"},{"location":"resources/resources/#facturapi.resources.base.Queryable.all","text":"Retrieve all resources given a query. All the returned resources are paginated, the method yields the first page of results and if more are found; then it continues to yield pages until all results are queried. Parameters: Name Type Description Default **query_params dict Arbitrary query keyword arguments. {} Returns: Type Description Generator[facturapi.resources.base.Resource, NoneType, NoneType] Generator: A generator containing the queried results. Source code in facturapi/resources/base.py @classmethod def all ( cls , ** query_params ) -> Generator [ Resource , None , None ]: \"\"\"Retrieve all resources given a query. All the returned resources are paginated, the method `yields` the first page of results and if more are found; then it continues to `yield` pages until all results are queried. Args: **query_params (dict): Arbitrary query keyword arguments. Returns: Generator: A generator containing the queried results. \"\"\" q = cls . _query_params ( ** query_params ) next_page_uri = f ' { cls . _resource } ? { urlencode ( q . dict ()) } ' current_page = 1 while next_page_uri : page = client . get ( next_page_uri ) yield from ( cls . _from_dict ( item ) for item in page [ 'data' ]) next_page_uri = '' if current_page < page [ 'total_pages' ]: current_page += 1 q . page = current_page next_page_uri = f ' { cls . _resource } ? { urlencode ( q . dict ()) } '","title":"all()"},{"location":"resources/resources/#facturapi.resources.base.Queryable.count","text":"Get the total number of results given a query. Parameters: Name Type Description Default **query_params dict Arbitrary query keyword arguments. {} Returns: Type Description int int: The total count of results. Source code in facturapi/resources/base.py @classmethod def count ( cls , ** query_params ) -> int : \"\"\"Get the total number of results given a query. Args: **query_params (dict): Arbitrary query keyword arguments. Returns: int: The total count of results. \"\"\" q = cls . _query_params ( ** query_params ) response = client . get ( cls . _resource , q . dict ()) items = response [ 'data' ] return len ( items )","title":"count()"},{"location":"resources/resources/#facturapi.resources.base.Queryable.first","text":"Retrieve the first resource found given a query or none. Parameters: Name Type Description Default **query_params dict Arbitrary query keyword arguments. {} Returns: Type Description Optional[facturapi.resources.base.Resource] Optional[Resource]: The first resource queried or None if none found. Source code in facturapi/resources/base.py @classmethod def first ( cls , ** query_params ) -> Optional [ Resource ]: \"\"\"Retrieve the first resource found given a query or none. Args: **query_params (dict): Arbitrary query keyword arguments. Returns: Optional[Resource]: The first resource queried or `None` if none found. \"\"\" q = cls . _query_params ( limit = 1 , ** query_params ) response = client . get ( cls . _resource , q . dict ()) try : item = response [ 'data' ][ 0 ] except IndexError : rv = None else : rv = cls . _from_dict ( item ) return rv","title":"first()"},{"location":"resources/resources/#facturapi.resources.base.Queryable.one","text":"Retrieve only one resource given a query. Given a query, retrieve one and only one resource. If more than one resource or none are found, this method throws an exception. Parameters: Name Type Description Default **query_params dict Arbitrary query keyword arguments. {} Exceptions: Type Description NoResultFound If no result is found. MultipleResultsFound If more than one result is found. Returns: Type Description Resource Resource: The one resource queried. Source code in facturapi/resources/base.py @classmethod def one ( cls , ** query_params ) -> Resource : \"\"\"Retrieve only one resource given a query. Given a query, retrieve one and only one resource. If more than one resource or none are found, this method throws an exception. Args: **query_params (dict): Arbitrary query keyword arguments. Raises: NoResultFound: If no result is found. MultipleResultsFound: If more than one result is found. Returns: Resource: The one resource queried. \"\"\" q = cls . _query_params ( limit = 2 , ** query_params ) response = client . get ( cls . _resource , q . dict ()) items = response [ 'data' ] len_items = len ( items ) if not len_items : raise NoResultFound if len_items > 1 : raise MultipleResultsFound return cls . _from_dict ( items [ 0 ])","title":"one()"},{"location":"resources/resources/#facturapi.resources.base.Resource","text":"Generic resource from Facturapi. Generic Resource class used by Facturapi resources. Attributes: Name Type Description _resource ClassVar[str] Name of the resource the class corresponds to. id str ID of the resource.","title":"Resource"},{"location":"resources/resources/#facturapi.resources.base.Retrievable","text":"Generic Retrievable class. Used by resources that can be retrieved, i.e: resources that can be retrieved by a GET request to its ID.","title":"Retrievable"},{"location":"resources/resources/#facturapi.resources.base.Retrievable-methods","text":"","title":"Methods"},{"location":"resources/resources/#facturapi.resources.base.Retrievable.refresh","text":"Refresh a resource Refresh resource's data to be sure its the latest. It performs a GET request on the resource. Returns: Type Description Resource The refreshed resource. Source code in facturapi/resources/base.py def refresh ( self ): \"\"\"Refresh a resource Refresh resource's data to be sure its the latest. It performs a GET request on the resource. Returns: Resource: The refreshed resource. \"\"\" new = self . retrieve ( self . id ) for attr , value in new . __dict__ . items (): setattr ( self , attr , value )","title":"refresh()"},{"location":"resources/resources/#facturapi.resources.base.Retrievable.retrieve","text":"Retrieve a resource given its ID Performs a GET request with the ID. Parameters: Name Type Description Default id str The ID of the resource required Returns: Type Description Resource Resource: The resource retrieved. Source code in facturapi/resources/base.py @classmethod def retrieve ( cls , id : str ) -> Resource : \"\"\"Retrieve a resource given its ID Performs a GET request with the ID. Args: id: The ID of the resource Returns: Resource: The resource retrieved. \"\"\" response = client . get ( f '/ { cls . _resource } / { id } ' ) return cls . _from_dict ( response )","title":"retrieve()"}]}